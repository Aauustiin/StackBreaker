Gadgets information
============================================================
0x00000542 : adc al, 0 ; add byte ptr [eax], al ; push 0x10 ; jmp 0x510
0x0000071a : adc al, 0x24 ; ret
0x00000a8d : adc al, 0x41 ; ret
0x0000065a : adc al, 0x51 ; call eax
0x00000547 : adc byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x510
0x00000532 : adc byte ptr [eax], al ; add byte ptr [eax], al ; push 8 ; jmp 0x510
0x000007fc : adc byte ptr [eax], bh ; jmp 0x854
0x00000660 : adc cl, cl ; ret
0x00000654 : adc edx, dword ptr [ebp - 0x77] ; in eax, 0x83 ; in al, dx ; adc al, 0x51 ; call eax
0x00000512 : add al, 0 ; add byte ptr [eax], al ; jmp dword ptr [ebx + 8]
0x00000860 : add al, 0x24 ; ret
0x00000694 : add al, 0xc1 ; jmp 0x6b7
0x0000075f : add al, byte ptr [eax] ; add al, ch ; mov ecx, 0x81fffffe ; ret
0x0000081d : add al, byte ptr [eax] ; add byte ptr [ebp - 0x2d77b], cl ; call dword ptr [eax - 0x18]
0x00000761 : add al, ch ; mov ecx, 0x81fffffe ; ret
0x00000a2f : add bh, ah ; ror dword ptr [ecx + eax], 0 ; inc ecx ; ret
0x00000667 : add bl, dh ; ret
0x0000051a : add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; jmp dword ptr [ebx + 0xc]
0x00000527 : add byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x510
0x000007fe : add byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x854
0x0000051c : add byte ptr [eax], al ; add byte ptr [eax], al ; jmp dword ptr [ebx + 0xc]
0x00000743 : add byte ptr [eax], al ; add byte ptr [eax], al ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x0000070c : add byte ptr [eax], al ; add byte ptr [eax], al ; push ebp ; mov ebp, esp ; pop ebp ; jmp 0x670
0x0000070d : add byte ptr [eax], al ; add byte ptr [ebp - 0x77], dl ; in eax, 0x5d ; jmp 0x670
0x000006fe : add byte ptr [eax], al ; add byte ptr [ecx], al ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x000005d3 : add byte ptr [eax], al ; add byte ptr [esi - 0x70], ah ; jmp dword ptr [ebx + 0x44]
0x000004fc : add byte ptr [eax], al ; add esp, 8 ; pop ebx ; ret
0x00000529 : add byte ptr [eax], al ; jmp 0x510
0x00000800 : add byte ptr [eax], al ; jmp 0x854
0x0000051e : add byte ptr [eax], al ; jmp dword ptr [ebx + 0xc]
0x00000514 : add byte ptr [eax], al ; jmp dword ptr [ebx + 8]
0x00000745 : add byte ptr [eax], al ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x000005d4 : add byte ptr [eax], al ; nop ; jmp dword ptr [ebx + 0x44]
0x00000524 : add byte ptr [eax], al ; push 0 ; jmp 0x510
0x00000544 : add byte ptr [eax], al ; push 0x10 ; jmp 0x510
0x00000554 : add byte ptr [eax], al ; push 0x18 ; jmp 0x510
0x00000564 : add byte ptr [eax], al ; push 0x20 ; jmp 0x510
0x00000574 : add byte ptr [eax], al ; push 0x28 ; jmp 0x510
0x00000584 : add byte ptr [eax], al ; push 0x30 ; jmp 0x510
0x00000594 : add byte ptr [eax], al ; push 0x38 ; jmp 0x510
0x000005a4 : add byte ptr [eax], al ; push 0x40 ; jmp 0x510
0x000005b4 : add byte ptr [eax], al ; push 0x48 ; jmp 0x510
0x000005c4 : add byte ptr [eax], al ; push 0x50 ; jmp 0x510
0x00000534 : add byte ptr [eax], al ; push 8 ; jmp 0x510
0x0000050e : add byte ptr [eax], al ; push dword ptr [ebx + 4] ; jmp dword ptr [ebx + 8]
0x0000070e : add byte ptr [eax], al ; push ebp ; mov ebp, esp ; pop ebp ; jmp 0x670
0x000005f5 : add byte ptr [ebp - 0x16df7d], cl ; call dword ptr [eax - 0x73]
0x0000081f : add byte ptr [ebp - 0x2d77b], cl ; call dword ptr [eax - 0x18]
0x0000070f : add byte ptr [ebp - 0x77], dl ; in eax, 0x5d ; jmp 0x670
0x00000778 : add byte ptr [ebx - 0x72aff714], al ; add dword ptr [eax - 0x17], -1 ; call dword ptr [eax - 0x18]
0x00000700 : add byte ptr [ecx], al ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x000005d5 : add byte ptr [esi - 0x70], ah ; jmp dword ptr [ebx + 0x44]
0x0000077e : add dword ptr [eax - 0x17], -1 ; call dword ptr [eax - 0x18]
0x00000a33 : add dword ptr [eax], eax ; inc ecx ; ret
0x0000065e : add esp, 0x10 ; leave ; ret
0x000007fa : add esp, 0x10 ; mov eax, 0 ; jmp 0x854
0x000006af : add esp, 0x10 ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x000008c5 : add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x000004fe : add esp, 8 ; pop ebx ; ret
0x000009fb : add esp, dword ptr [edi - 0x3b] ; ret
0x00000582 : and al, 0 ; add byte ptr [eax], al ; push 0x30 ; jmp 0x510
0x00000567 : and byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x510
0x00000572 : and byte ptr [eax], al ; add byte ptr [eax], al ; push 0x28 ; jmp 0x510
0x00000a8a : and byte ptr [edi + 0xe], al ; adc al, 0x41 ; ret
0x00000600 : call 0x51510604
0x00000602 : call dword ptr [eax + 0x51]
0x00000782 : call dword ptr [eax - 0x18]
0x000005fb : call dword ptr [eax - 0x73]
0x000009d7 : call dword ptr [eax]
0x00000a0f : call dword ptr [ebx]
0x000007b8 : call dword ptr [edx + 0x50]
0x0000065c : call eax
0x000006ad : call edx
0x000006b4 : cld ; leave ; ret
0x0000085d : cld ; ret
0x00000a30 : cld ; ror dword ptr [ecx + eax], 0 ; inc ecx ; ret
0x00000597 : cmp byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x510
0x0000070b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; push ebp ; mov ebp, esp ; pop ebp ; jmp 0x670
0x00000a88 : dec ebp ; push cs ; and byte ptr [edi + 0xe], al ; adc al, 0x41 ; ret
0x00000736 : fcom dword ptr [edx - 0x77] ; ret
0x000004fa : fiadd dword ptr [eax] ; add byte ptr [eax], al ; add esp, 8 ; pop ebx ; ret
0x00000611 : hlt ; mov ebx, dword ptr [esp] ; ret
0x00000856 : hlt ; pop ecx ; pop ebx ; pop esi ; pop ebp ; lea esp, [ecx - 4] ; ret
0x00000659 : in al, dx ; adc al, 0x51 ; call eax
0x00000693 : in al, dx ; add al, 0xc1 ; jmp 0x6b7
0x000006a9 : in al, dx ; or byte ptr [eax + 0x51], dl ; call edx
0x0000077a : in al, dx ; or byte ptr [eax - 0x73], dl ; add dword ptr [eax - 0x17], -1 ; call dword ptr [eax - 0x18]
0x000007b1 : in al, dx ; or byte ptr [ebp - 0x16866d], cl ; call dword ptr [edx + 0x50]
0x00000712 : in eax, 0x5d ; jmp 0x670
0x00000657 : in eax, 0x83 ; in al, dx ; adc al, 0x51 ; call eax
0x00000795 : inc dword ptr [ebx - 0x7c72f314] ; insb byte ptr es:[edi], dx ; jmp 0xe85107a0
0x000005d2 : inc eax ; add byte ptr [eax], al ; add byte ptr [esi - 0x70], ah ; jmp dword ptr [ebx + 0x44]
0x0000077f : inc eax ; jmp 0xe8510784
0x00000a35 : inc ecx ; ret
0x00000a8b : inc edi ; push cs ; adc al, 0x41 ; ret
0x0000079b : insb byte ptr es:[edi], dx ; jmp 0xe85107a0
0x000001a5 : insd dword ptr es:[edi], dx ; mov byte ptr [ecx], dl ; jmp 0x2194b44
0x000001a0 : jae 0x16d ; sub bl, dh ; jnp 0x213 ; mov byte ptr [ecx], dl ; jmp 0x2194b44
0x000008ce : jbe 0x8d0 ; repz ret
0x00000653 : je 0x668 ; push ebp ; mov ebp, esp ; sub esp, 0x14 ; push ecx ; call eax
0x00000665 : je 0x68d ; add bl, dh ; ret
0x000006a6 : je 0x6b2 ; sub esp, 8 ; push eax ; push ecx ; call edx
0x000008c4 : jecxz 0x849 ; les ecx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x000001a8 : jmp 0x2194b44
0x000007b6 : jmp 0x505307ba
0x000007f0 : jmp 0x505307f4
0x0000052b : jmp 0x510
0x00000714 : jmp 0x670
0x00000696 : jmp 0x6b7
0x00000802 : jmp 0x854
0x000005f9 : jmp 0x8d5105fd
0x00000780 : jmp 0xe8510784
0x0000079c : jmp 0xe85107a0
0x0000080a : jmp 0xe851080e
0x00000530 : jmp dword ptr [ebx + 0x10]
0x00000540 : jmp dword ptr [ebx + 0x14]
0x00000550 : jmp dword ptr [ebx + 0x18]
0x00000560 : jmp dword ptr [ebx + 0x1c]
0x00000570 : jmp dword ptr [ebx + 0x20]
0x00000580 : jmp dword ptr [ebx + 0x24]
0x00000590 : jmp dword ptr [ebx + 0x28]
0x000005a0 : jmp dword ptr [ebx + 0x2c]
0x000005b0 : jmp dword ptr [ebx + 0x30]
0x000005c0 : jmp dword ptr [ebx + 0x34]
0x000005d0 : jmp dword ptr [ebx + 0x40]
0x000005d8 : jmp dword ptr [ebx + 0x44]
0x00000520 : jmp dword ptr [ebx + 0xc]
0x00000516 : jmp dword ptr [ebx + 8]
0x000008c3 : jne 0x8a8 ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00000a2d : jne 0xaa7 ; add bh, ah ; ror dword ptr [ecx + eax], 0 ; inc ecx ; ret
0x000001a4 : jnp 0x213 ; mov byte ptr [ecx], dl ; jmp 0x2194b44
0x00000a2e : js 0xa32 ; cld ; ror dword ptr [ecx + eax], 0 ; inc ecx ; ret
0x00000664 : lea esi, [esi] ; repz ret
0x0000085b : lea esp, [ecx - 4] ; ret
0x00000661 : leave ; ret
0x000004ff : les ecx, ptr [eax] ; pop ebx ; ret
0x000008c6 : les ecx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0000065f : les edx, ptr [eax] ; leave ; ret
0x000007fb : les edx, ptr [eax] ; mov eax, 0 ; jmp 0x854
0x000006b0 : les edx, ptr [eax] ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x000001a6 : mov byte ptr [ecx], dl ; jmp 0x2194b44
0x000005d1 : mov dword ptr [0x40], eax ; nop ; jmp dword ptr [ebx + 0x44]
0x00000517 : mov dword ptr [8], eax ; add byte ptr [eax], al ; add byte ptr [eax], al ; jmp dword ptr [ebx + 0xc]
0x000007fd : mov eax, 0 ; jmp 0x854
0x00000742 : mov eax, 0 ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x0000085f : mov eax, dword ptr [esp] ; ret
0x00000711 : mov ebp, esp ; pop ebp ; jmp 0x670
0x00000656 : mov ebp, esp ; sub esp, 0x14 ; push ecx ; call eax
0x000006b2 : mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x00000612 : mov ebx, dword ptr [esp] ; ret
0x00000763 : mov ecx, 0x81fffffe ; ret
0x00000719 : mov edx, dword ptr [esp] ; ret
0x000005d7 : nop ; jmp dword ptr [ebx + 0x44]
0x00000663 : nop ; lea esi, [esi] ; repz ret
0x0000061f : nop ; mov ebx, dword ptr [esp] ; ret
0x0000061d : nop ; nop ; mov ebx, dword ptr [esp] ; ret
0x0000061b : nop ; nop ; nop ; mov ebx, dword ptr [esp] ; ret
0x00000522 : or al, 0 ; add byte ptr [eax], al ; push 0 ; jmp 0x510
0x000008c7 : or al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x000006a7 : or al, byte ptr [ebx + 0x515008ec] ; call edx
0x000006aa : or byte ptr [eax + 0x51], dl ; call edx
0x0000077b : or byte ptr [eax - 0x73], dl ; add dword ptr [eax - 0x17], -1 ; call dword ptr [eax - 0x18]
0x00000518 : or byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; jmp dword ptr [ebx + 0xc]
0x00000537 : or byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x510
0x000007b2 : or byte ptr [ebp - 0x16866d], cl ; call dword ptr [edx + 0x50]
0x00000733 : or byte ptr [ebp - 0x76ad27ab], cl ; ret
0x000006fd : pop eax ; add byte ptr [eax], al ; add byte ptr [ecx], al ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x000006b3 : pop ebp ; cld ; leave ; ret
0x00000713 : pop ebp ; jmp 0x670
0x0000085a : pop ebp ; lea esp, [ecx - 4] ; ret
0x000008cb : pop ebp ; ret
0x00000858 : pop ebx ; pop esi ; pop ebp ; lea esp, [ecx - 4] ; ret
0x000008c8 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00000501 : pop ebx ; ret
0x00000857 : pop ecx ; pop ebx ; pop esi ; pop ebp ; lea esp, [ecx - 4] ; ret
0x000008ca : pop edi ; pop ebp ; ret
0x00000859 : pop esi ; pop ebp ; lea esp, [ecx - 4] ; ret
0x000008c9 : pop esi ; pop edi ; pop ebp ; ret
0x0000085c : popal ; cld ; ret
0x00000526 : push 0 ; jmp 0x510
0x00000546 : push 0x10 ; jmp 0x510
0x00000556 : push 0x18 ; jmp 0x510
0x00000566 : push 0x20 ; jmp 0x510
0x00000576 : push 0x28 ; jmp 0x510
0x00000586 : push 0x30 ; jmp 0x510
0x00000596 : push 0x38 ; jmp 0x510
0x000005a6 : push 0x40 ; jmp 0x510
0x000005b6 : push 0x48 ; jmp 0x510
0x000005c6 : push 0x50 ; jmp 0x510
0x00000536 : push 8 ; jmp 0x510
0x00000a8c : push cs ; adc al, 0x41 ; ret
0x00000a89 : push cs ; and byte ptr [edi + 0xe], al ; adc al, 0x41 ; ret
0x00000a86 : push cs ; xor byte ptr [ebp + 0xe], cl ; and byte ptr [edi + 0xe], al ; adc al, 0x41 ; ret
0x00000510 : push dword ptr [ebx + 4] ; jmp dword ptr [ebx + 8]
0x000006ab : push eax ; push ecx ; call edx
0x00000735 : push ebp ; fcom dword ptr [edx - 0x77] ; ret
0x00000710 : push ebp ; mov ebp, esp ; pop ebp ; jmp 0x670
0x00000655 : push ebp ; mov ebp, esp ; sub esp, 0x14 ; push ecx ; call eax
0x0000065b : push ecx ; call eax
0x000006ac : push ecx ; call edx
0x00000610 : push esp ; mov ebx, dword ptr [esp] ; ret
0x000008e0 : push ss ; add byte ptr [eax], al ; add esp, 8 ; pop ebx ; ret
0x000008df : rcl dword ptr [esi], cl ; add byte ptr [eax], al ; add esp, 8 ; pop ebx ; ret
0x000005f2 : rcr byte ptr [ecx], 0 ; add byte ptr [ebp - 0x16df7d], cl ; call dword ptr [eax - 0x73]
0x00000668 : repz ret
0x000004ea : ret
0x00000676 : ret 0x193b
0x00000636 : ret 0x197b
0x000007e0 : ret 0x838b
0x000001a1 : retf
0x000006ae : rol byte ptr [ebx + 0x5d8b10c4], cl ; cld ; leave ; ret
0x00000a31 : ror dword ptr [ecx + eax], 0 ; inc ecx ; ret
0x000006a5 : sal byte ptr [edx + ecx - 0x7d], cl ; in al, dx ; or byte ptr [eax + 0x51], dl ; call edx
0x00000562 : sbb al, 0 ; add byte ptr [eax], al ; push 0x20 ; jmp 0x510
0x00000613 : sbb al, 0x24 ; ret
0x00000557 : sbb byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x510
0x00000552 : sbb byte ptr [eax], al ; add byte ptr [eax], al ; push 0x18 ; jmp 0x510
0x000005f3 : sbb dword ptr [eax], eax ; add byte ptr [ebp - 0x16df7d], cl ; call dword ptr [eax - 0x73]
0x000005ff : shr al, 0xff ; call dword ptr [eax + 0x51]
0x000005a2 : sub al, 0 ; add byte ptr [eax], al ; push 0x40 ; jmp 0x510
0x000001a2 : sub bl, dh ; jnp 0x213 ; mov byte ptr [ecx], dl ; jmp 0x2194b44
0x00000577 : sub byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x510
0x00000592 : sub byte ptr [eax], al ; add byte ptr [eax], al ; push 0x38 ; jmp 0x510
0x00000658 : sub esp, 0x14 ; push ecx ; call eax
0x000006a8 : sub esp, 8 ; push eax ; push ecx ; call edx
0x0000019f : test byte ptr [ebx - 0x35], dh ; sub bl, dh ; jnp 0x213 ; mov byte ptr [ecx], dl ; jmp 0x2194b44
0x000006a4 : test edx, edx ; je 0x6b2 ; sub esp, 8 ; push eax ; push ecx ; call edx
0x000005c2 : xor al, 0 ; add byte ptr [eax], al ; push 0x50 ; jmp 0x510
0x00000587 : xor byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x510
0x000005b2 : xor byte ptr [eax], al ; add byte ptr [eax], al ; push 0x48 ; jmp 0x510
0x00000a87 : xor byte ptr [ebp + 0xe], cl ; and byte ptr [edi + 0xe], al ; adc al, 0x41 ; ret

Unique gadgets found: 231

ROP chain generation
===========================================================

- Step 1 -- Write-what-where gadgets

	[-] Can't find the 'mov dword ptr [r32], r32' gadget
